from scholarly import scholarly
import json

# search aurthor by name (potentially problematic for duplicates)
# author = scholarly.fill(next(scholarly.search_author('Vasileios Ntinas')))

# search aurthor by Google Scholar ID 
# (it is autogenerated by Google and you can find it in the URL of your Google Scholar Profile)
author = scholarly.fill(scholarly.search_author_id('HRKtPPEAAAAJ'))

my_pubs = {'journals':[],'conferences':[]}
Js = 0;
Cs = 0;
my_names = ['Mátyás Liptovszky']$
# sjr_dict = {'ieee transactions on nanotechnology':'15464',\
#            'ieee access':'21100374601',\
#            'ieee transactions on circuits and systems ii: express briefs':'9500153930',\
#            'ieee transactions on neural networks and learning systems':'21100235616',\
#            'electronics letters':'24918',\
#            'ieee transactions on circuits and systems i: regular papers':'11000153733',\
#            'journal of physics d: applied physics':'28570',\
#            'journal of computational science':'19700174607'}
for the_pub in author['publications']:
    pub = scholarly.fill(the_pub)
    if 'conference' in pub['bib']:
        Cs += 1
        the_authors = pub['bib']['author'].replace(" and",", ");
        for name in my_names:
            the_authors = the_authors.replace(name,'<strong>' + name + '</strong>');
        my_pubs['conferences'].append({'c_id':Cs,\
                                       'title':pub['bib']['title'],\
                                       'authors':the_authors,\
                                       'details':'{0}{1}{2}'.format(pub['bib']['conference'],\
                                                 ', pp.'+pub['bib']['pages'] if 'pages' in pub['bib'] else '',\
                                                 ', '+str(pub['bib']['pub_year']) if 'pub_year' in pub['bib'] else ''),\
                                       'abstract':pub['bib']['abstract'],\
                                       'url':pub['pub_url'],\
                                       'cite_by':'{0}'.format('https://scholar.google.com'+pub['citedby_url'] if 'citedby_url' in pub else '')})
    if 'journal' in pub['bib']:
        Js += 1
        the_authors = pub['bib']['author'].replace(" and",", ");
        for name in my_names:
            the_authors = the_authors.replace(name,'<strong>' + name + '</strong>');
        my_pubs['journals'].append({'j_id':Js,\
                                    'title':pub['bib']['title'],\
                                    'authors':the_authors,\
                                    'details':'{0}{1}{2}{3}{4}'.format(pub['bib']['journal'],\
                                              ', vol.'+pub['bib']['volume'] if 'volume' in pub['bib'] else '',\
                                              ', no.'+pub['bib']['number'] if 'number' in pub['bib'] else '',\
                                              ', pp.'+pub['bib']['pages'] if 'pages' in pub['bib'] else '',\
                                              ', '+str(pub['bib']['pub_year']) if 'pub_year' in pub['bib'] else ''),\
                                    'abstract':pub['bib']['abstract'],\
                                    'sjr_id':sjr_dict[pub['bib']['journal'].lower()],\
                                    'url':pub['pub_url'],\
                                    'cite_by':'{0}'.format('https://scholar.google.com'+pub['citedby_url'] if 'citedby_url' in pub else '')})

with open('data.json', 'w') as outfile:
    json.dump(my_pubs, outfile, indent = 4)
